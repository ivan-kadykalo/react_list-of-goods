{"version":3,"sources":["components/List/List.tsx","App.tsx","index.tsx"],"names":["SortBy","List","state","isReverse","sortBy","None","wordLength","switchReverse","setState","sortByAlphabet","Alphabet","sortByLength","Length","handleChange","value","reset","this","newGoodsList","props","goodsList","filter","word","length","sort","elem1","elem2","localeCompare","reverse","className","type","classNames","onClick","onChange","event","Number","target","Array","from","_","i","map","num","item","React","Component","goodsFromServer","App","isVisible","showList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1745f195.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './List.scss';\n\nenum SortBy {\n  Length = 'length',\n  Alphabet = 'alphabet',\n  None = '',\n}\n\ntype Props = {\n  goodsList: string[];\n};\n\ntype State = {\n  isReverse: boolean;\n  sortBy: SortBy;\n  wordLength: number;\n};\n\nexport class List extends React.Component<Props, State> {\n  state = {\n    isReverse: false,\n    sortBy: SortBy.None,\n    wordLength: 1,\n  };\n\n  switchReverse = () => {\n    this.setState((state) => ({\n      isReverse: !state.isReverse,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState((state) => ({\n      sortBy: (state.sortBy === SortBy.Alphabet)\n        ? SortBy.None\n        : SortBy.Alphabet,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState((state) => ({\n      sortBy: (state.sortBy === SortBy.Length)\n        ? SortBy.None\n        : SortBy.Length,\n    }));\n  };\n\n  handleChange = (value: number) => {\n    this.setState({\n      wordLength: value,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReverse: false,\n      sortBy: SortBy.None,\n      wordLength: 1,\n    });\n  };\n\n  render() {\n    const { isReverse, sortBy, wordLength } = this.state;\n    const { goodsList } = this.props;\n    const newGoodsList = goodsList.filter(word => word.length >= wordLength);\n\n    switch (sortBy) {\n      case 'alphabet':\n        newGoodsList.sort((elem1, elem2) => elem1.localeCompare(elem2));\n        break;\n      case 'length':\n        newGoodsList.sort((elem1, elem2) => elem1.length - elem2.length);\n        break;\n      default:\n        break;\n    }\n\n    if (isReverse) {\n      newGoodsList.reverse();\n    }\n\n    return (\n      <div className=\"goods\">\n        <div className=\"goods__buttons\">\n          <button\n            type=\"button\"\n            className={classNames('goods__button',\n              { 'goods__button--active': isReverse })}\n            onClick={this.switchReverse}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('goods__button',\n              { 'goods__button--active': sortBy === SortBy.Alphabet })}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('goods__button',\n              { 'goods__button--active': sortBy === SortBy.Length })}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <select\n            className={classNames('goods__button',\n              { 'goods__button--active': wordLength !== 1 })}\n            onChange={\n              event => this.handleChange(Number(event.target.value))\n            }\n            value={wordLength}\n          >\n            {\n              Array.from({ length: 10 }, (_, i) => i + 1).map(num => (\n                <option value={num} key={num}>{`Word length >= ${num}`}</option>\n              ))\n            }\n          </select>\n\n          <button\n            type=\"button\"\n            className=\"goods__button\"\n            onClick={this.reset}\n          >\n            Reset\n          </button>\n        </div>\n\n        <ul className=\"goods__list\">\n          {\n            newGoodsList.map((item) => (\n              <li key={item} className=\"goods__item\">\n                {item}\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { List } from './components/List/List';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isVisible: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isVisible: false,\n  };\n\n  showList = () => {\n    this.setState((state) => ({\n      isVisible: !state.isVisible,\n    }));\n  };\n\n  render() {\n    const { isVisible } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__header\">Goods</h1>\n\n        {isVisible && <List goodsList={goodsFromServer} />}\n\n        {!isVisible && (\n          <button\n            type=\"button\"\n            onClick={this.showList}\n            className=\"app__show-button\"\n          >\n            Start\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}